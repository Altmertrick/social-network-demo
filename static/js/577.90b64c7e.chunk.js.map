{"version":3,"file":"static/js/577.90b64c7e.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPostsWrapper\":\"MyPosts_myPostsWrapper__ZQ3AE\",\"postsBlock\":\"MyPosts_postsBlock__lB-pf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"active\":\"Post_active__Rxs1A\"};","import s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <div>\n        <img src=\"https://thumbs.dreamstime.com/b/avatar-icon-black-round-avatar-flat-symbol-isolated-white-background-avatar-simple-icon-avatar-abstract-icon-black-vector-124920467.jpg\" />\n      </div>\n      <div>\n        {props.message}\n        <div>likes: {props.likes}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm, reset } from 'redux-form';\n\nimport { maxLength } from '../../../utilities/validators/validators';\n\nimport { FormControlWithInputTag } from '../../common/FormControls/FormControls';\n\nconst maxLength10 = maxLength(10);\n\nlet AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[maxLength10]}\n          name=\"newPostText\"\n          component={FormControlWithInputTag}\n          inputTag=\"textarea\"\n          type=\"text\"\n          placeholder=\"Write your post\"\n        />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nAddPostForm = reduxForm({\n  form: 'profileAddPostForm',\n})(AddPostForm);\n\nconst MyPosts = (props) => {\n  const postsEls = props.posts.map((p) => (\n    <Post id={p.id} message={p.text} likes={p.likes} />\n  ));\n\n  const submit = (values, dispatch) => {\n    console.log(values);\n    props.addPost(values.newPostText);\n\n    dispatch(reset('profileAddPostForm'));\n  };\n\n  return (\n    <div className={s.myPostsWrapper}>\n      <h3>My Posts</h3>\n      <div>\n        <AddPostForm onSubmit={submit} />\n      </div>\n\n      <div className={s.postsBlock}>\n        <h4>Posts:</h4>\n\n        {postsEls}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { addPostAC } from '../../../redux/reducers/profile-reducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (postText) => {\n      dispatch(addPostAC(postText));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__NQlSq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatus = (props) => {\n  const [aditMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.userStatus);\n\n  useEffect(() => {\n    setStatus(props.userStatus);\n    console.log('Use Effect');\n  }, [props.userStatus]);\n\n  const activateAditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateAditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onTextareaChange = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <div>\n      {!aditMode && (\n        <div>\n          <span onClick={activateAditMode}>\n            {props.userStatus || 'Status: ----'}\n          </span>\n        </div>\n      )}\n\n      {aditMode && (\n        <div>\n          <input\n            value={status}\n            autoFocus={true}\n            onChange={onTextareaChange}\n            onBlur={deactivateAditMode}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import s from './ProfileInfo.module.css';\n\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\n\nconst ProfileInfo = (props) => {\n  return (\n    <div className={s.profileInfoWrapper}>\n      <h3>Profile Info</h3>\n      <div>\n        <div>\n          <img src={props.userData.photos.large} />\n        </div>\n\n        <div className={s.descriptionBlock}>\n          <div>\n            <h4>{props.userData.fullName}</h4>\n          </div>\n          <ProfileStatus\n            userStatus={props.userStatus}\n            updateUserStatus={props.updateUserStatus}\n          />\n          <div>{props.userData.aboutMe}</div>\n          <div>User Id: {props.userData.userId}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import s from './Profile.module.css';\n\nimport Preloader from '../common/Preloader/Preloader';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <h2>Profile</h2>\n      {props.userData ? (\n        <ProfileInfo\n          userData={props.userData}\n          userStatus={props.userStatus}\n          updateUserStatus={props.updateUserStatus}\n        />\n      ) : (\n        <Preloader />\n      )}\n\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import s from './Profile.module.css';\nimport { Component } from 'react';\n\nimport Profile from './Profile';\nimport AuthRedirect from '../../hoc/AuthRedirect';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getProfileThC as getProfile,\n  getUserStatusThC as getUserStatus,\n  updateUserStatusThC as updateUserStatus,\n} from '../../redux/reducers/profile-reducer';\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.params.userId;\n\n    if (userId === 'myProfile') {\n      userId = this.props.authUserId;\n    }\n\n    if (userId) {\n      this.props.getProfile(userId);\n\n      this.props.getUserStatus(userId);\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        userData={this.props.userData}\n        userStatus={this.props.userStatus}\n        updateUserStatus={this.props.updateUserStatus}\n      />\n    );\n  }\n}\n\nlet WithUrlParamsProfileContainer = (props) => {\n  let params = useParams();\n\n  return <ProfileContainer {...props} params={params} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.profilePage.userProfileData,\n    userStatus: state.profilePage.userStatus,\n    authUserId: state.authData.userId,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getUserStatus, updateUserStatus })\n  //AuthRedirect\n)(WithUrlParamsProfileContainer);\n"],"names":["props","className","s","src","message","likes","maxLength10","maxLength","AddPostForm","onSubmit","handleSubmit","Field","validate","name","component","FormControlWithInputTag","inputTag","type","placeholder","reduxForm","form","postsEls","posts","map","p","id","text","values","dispatch","console","log","addPost","newPostText","reset","connect","state","profilePage","postText","addPostAC","MyPosts","useState","aditMode","setEditMode","userStatus","status","setStatus","useEffect","onClick","value","autoFocus","onChange","e","target","onBlur","updateUserStatus","userData","photos","large","fullName","aboutMe","userId","Preloader","MyPostsContainer","ProfileContainer","this","params","authUserId","getProfile","getUserStatus","Component","compose","userProfileData","authData","useParams"],"sourceRoot":""}