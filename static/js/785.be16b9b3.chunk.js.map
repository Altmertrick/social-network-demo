{"version":3,"file":"static/js/785.be16b9b3.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.js","components/Profile/ProfileInfo/ProfileData/ProfileData.js","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"myPostsWrapper\":\"MyPosts_myPostsWrapper__ZQ3AE\",\"postsBlock\":\"MyPosts_postsBlock__lB-pf\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\",\"active\":\"Post_active__Rxs1A\"};","import s from './Post.module.css';\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <div>\n        <img src=\"https://thumbs.dreamstime.com/b/avatar-icon-black-round-avatar-flat-symbol-isolated-white-background-avatar-simple-icon-avatar-abstract-icon-black-vector-124920467.jpg\" />\n      </div>\n      <div>\n        {props.message}\n        <div>likes: {props.likes}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm, reset } from 'redux-form';\n\nimport { maxLength } from '../../../utilities/validators/validators';\n\nimport { FormControlWithInputTag } from '../../common/FormControls/FormControls';\n\nconst maxLength10 = maxLength(10);\n\nlet AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          validate={[maxLength10]}\n          name=\"newPostText\"\n          component={FormControlWithInputTag}\n          inputTag=\"textarea\"\n          type=\"text\"\n          placeholder=\"Write your post\"\n        />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nAddPostForm = reduxForm({\n  form: 'profileAddPostForm',\n})(AddPostForm);\n\nconst MyPosts = (props) => {\n  const postsEls = props.posts.map((p) => (\n    <Post key={p.id} id={p.id} message={p.text} likes={p.likes} />\n  ));\n\n  const submit = (values, dispatch) => {\n    console.log(values);\n    props.addPost(values.newPostText);\n\n    dispatch(reset('profileAddPostForm'));\n  };\n\n  return (\n    <div className={s.myPostsWrapper}>\n      <h3>My Posts</h3>\n      <div>\n        <AddPostForm onSubmit={submit} />\n      </div>\n\n      <div className={s.postsBlock}>\n        <h4>Posts:</h4>\n\n        {postsEls}\n      </div>\n    </div>\n  );\n};\n\nexport default MyPosts;\n","import MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { addPostAC } from '../../../redux/reducers/profile-reducer';\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (postText) => {\n      dispatch(addPostAC(postText));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoWrapper\":\"ProfileInfo_profileInfoWrapper__NQlSq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\",\"imageBlock\":\"ProfileInfo_imageBlock__8p3Ta\",\"imageWrapper\":\"ProfileInfo_imageWrapper__1lDv2\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"selectImgBtn\":\"ProfileInfo_selectImgBtn__g7GwY\",\"formControl\":\"ProfileInfo_formControl__fWmIh\",\"error\":\"ProfileInfo_error__Vu9Ki\",\"contacts\":\"ProfileInfo_contacts__hKq1Z\"};","import React, { useEffect, useState } from 'react';\n\nconst ProfileStatus = (props) => {\n  const [aditMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.userStatus);\n\n  useEffect(() => {\n    setStatus(props.userStatus);\n    console.log('Use Effect');\n  }, [props.userStatus]);\n\n  const activateAditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateAditMode = () => {\n    setEditMode(false);\n    props.updateUserStatus(status);\n  };\n\n  const onTextareaChange = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <div>\n      {!aditMode && (\n        <div>\n          <span onClick={activateAditMode}>\n            {props.userStatus || 'Status: ----'}\n          </span>\n        </div>\n      )}\n\n      {aditMode && (\n        <div>\n          <input\n            value={status}\n            autoFocus={true}\n            onChange={onTextareaChange}\n            onBlur={deactivateAditMode}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatus;\n","import s from './../ProfileInfo.module.css';\n\nconst ProfileData = (props) => {\n  const { userData } = props;\n\n  return (\n    <div>\n      <div>Full Name: {userData.fullName}</div>\n      <div>About Me: {userData.aboutMe}</div>\n      <div>\n        Looking for a job:\n        <input type=\"checkbox\" checked={userData.lookingForAJob} readOnly />\n      </div>\n      <div>Skills : {userData.lookingForAJobDescription}</div>\n      <div className={s.contacts}>\n        <h3>Contacts</h3>\n        {Object.keys(userData.contacts).map((key) => {\n          return (\n            <div key={key}>\n              {key} : {userData.contacts[key]}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileData;\n","import s from './../ProfileInfo.module.css';\n\nimport { reduxForm, Field } from 'redux-form';\nimport { FormControlWithInputTag } from '../../../common/FormControls/FormControls';\n\nconst ProfileFormRedux = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button>save</button>\n\n      <div>\n        Full Name:\n        <Field\n          name=\"fullName\"\n          component={FormControlWithInputTag}\n          inputTag={'input'}\n          type=\"text\"\n          placeholder=\"full name\"\n        />\n      </div>\n\n      <div>\n        About me:\n        <Field\n          name=\"aboutMe\"\n          component={FormControlWithInputTag}\n          inputTag={'input'}\n          type=\"text\"\n          placeholder=\"about me\"\n        />\n      </div>\n\n      <div>\n        Looking for a job:\n        <Field name=\"lookingForAJob\" component=\"input\" type=\"checkbox\" />\n      </div>\n\n      <div>\n        Skills :\n        <Field\n          name=\"lookingForAJobDescription\"\n          component={FormControlWithInputTag}\n          inputTag={'textarea'}\n          type=\"text\"\n          placeholder=\"your skills\"\n        />\n      </div>\n      <div>\n        <h3>Contacts</h3>\n        {Object.keys(props.userData.contacts).map((key) => {\n          return (\n            <div key={key}>\n              {key}:\n              <Field\n                name={`contacts.${key}`}\n                component={FormControlWithInputTag}\n                inputTag={'input'}\n                type=\"text\"\n              />\n            </div>\n          );\n        })}\n        <br />\n      </div>\n      {props.error && (\n        <div className={`${s.formControl} ${s.error}`}>\n          <span>{props.error}</span>\n        </div>\n      )}\n    </form>\n  );\n};\n\nconst ProfileDataForm = reduxForm({ form: 'profileDataForm' })(\n  ProfileFormRedux\n);\n\nexport default ProfileDataForm;\n","import s from './ProfileInfo.module.css';\nimport defPhoto from './../../../assets/images/User_default_avatar.png';\n\nimport { useState } from 'react';\n\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\nimport ProfileData from './ProfileData/ProfileData';\nimport ProfileDataForm from './ProfileDataForm/ProfileDataForm';\n\nconst ProfileInfo = (props) => {\n  const [editMode, setEditMode] = useState(false);\n\n  const onImageChange = (e) => {\n    const imageFile = e.target.files[0];\n    props.saveImage(imageFile);\n  };\n\n  const onFormSubmit = (formData) => {\n    props.saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div className={s.profileInfoWrapper}>\n      <h3>Profile Info</h3>\n\n      <div className={s.imageBlock}>\n        {props.isUploading ? (\n          <Preloader />\n        ) : (\n          <div className={s.imageWrapper}>\n            <img\n              className={s.mainPhoto}\n              src={`${\n                props.userData.photos.large\n                  ? props.userData.photos.large\n                  : defPhoto\n              }`}\n            />\n            {props.isOwner && (\n              <label htmlFor=\"chooseImg\" className={s.selectImgBtn}>\n                Select Image\n                <input\n                  id=\"chooseImg\"\n                  type=\"file\"\n                  onChange={onImageChange}\n                  accept=\"image/png, image/jpg, image/gif, image/jpeg\"\n                />\n              </label>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className={s.descriptionBlock}>\n        <div>\n          <h4>{props.userData.fullName}</h4>\n        </div>\n        <ProfileStatus\n          userStatus={props.userStatus}\n          updateUserStatus={props.updateUserStatus}\n        />\n        <div>User Id: {props.userData.userId}</div>\n\n        {props.isOwner && !editMode && (\n          <button onClick={() => setEditMode(true)}>Edit Profile</button>\n        )}\n\n        {editMode ? (\n          <ProfileDataForm\n            initialValues={props.userData}\n            userData={props.userData}\n            onSubmit={onFormSubmit}\n          />\n        ) : (\n          <ProfileData userData={props.userData} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import s from './Profile.module.css';\n\nimport Preloader from '../common/Preloader/Preloader';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\nconst Profile = (props) => {\n  console.log(props.isOwner);\n  return (\n    <div>\n      <h2>Profile</h2>\n      {props.userData ? (\n        <ProfileInfo\n          isOwner={props.isOwner}\n          saveProfile={props.saveProfile}\n          saveImage={props.saveImage}\n          isUploading={props.isUploading}\n          //\n          userData={props.userData}\n          userStatus={props.userStatus}\n          updateUserStatus={props.updateUserStatus}\n        />\n      ) : (\n        <Preloader />\n      )}\n\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import s from './Profile.module.css';\nimport { Component } from 'react';\n\nimport Profile from './Profile';\nimport AuthRedirect from '../../hoc/AuthRedirect';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport {\n  getProfileThC as getProfile,\n  getUserStatusThC as getUserStatus,\n  updateUserStatusThC as updateUserStatus,\n  saveImageThC as saveImage,\n  saveProfileThC as saveProfile,\n} from '../../redux/reducers/profile-reducer';\n\nclass ProfileContainer extends Component {\n  refreshProfile() {\n    let userId = this.props.params.userId;\n\n    if (userId === 'myProfile') {\n      userId = this.props.authUserId;\n    }\n\n    if (userId) {\n      this.props.getProfile(userId);\n\n      this.props.getUserStatus(userId);\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('profile comp did upd');\n    if (prevProps.params.userId !== this.props.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        isOwner={\n          (this.props.authUserId && this.props.params.userId === 'myProfile') ||\n          (this.props.authUserId &&\n            this.props.params.userId == this.props.authUserId)\n            ? true\n            : false\n        }\n        saveProfile={this.props.saveProfile}\n        saveImage={this.props.saveImage}\n        isUploading={this.props.isUploading}\n        //\n        userData={this.props.userData}\n        userStatus={this.props.userStatus}\n        updateUserStatus={this.props.updateUserStatus}\n      />\n    );\n  }\n}\n\nlet WithUrlParamsProfileContainer = (props) => {\n  let params = useParams();\n\n  return <ProfileContainer {...props} params={params} />;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    userData: state.profilePage.userProfileData,\n    userStatus: state.profilePage.userStatus,\n    isUploading: state.profilePage.isUploadingImg,\n    authUserId: state.authData.userId,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, {\n    getProfile,\n    getUserStatus,\n    updateUserStatus,\n    saveImage,\n    saveProfile,\n  })\n  //AuthRedirect\n)(WithUrlParamsProfileContainer);\n"],"names":["props","className","s","src","message","likes","maxLength10","maxLength","AddPostForm","onSubmit","handleSubmit","Field","validate","name","component","FormControlWithInputTag","inputTag","type","placeholder","reduxForm","form","postsEls","posts","map","p","id","text","values","dispatch","console","log","addPost","newPostText","reset","connect","state","profilePage","postText","addPostAC","MyPosts","useState","aditMode","setEditMode","userStatus","status","setStatus","useEffect","onClick","value","autoFocus","onChange","e","target","onBlur","updateUserStatus","userData","fullName","aboutMe","checked","lookingForAJob","readOnly","lookingForAJobDescription","Object","keys","contacts","key","error","editMode","isUploading","Preloader","photos","large","defPhoto","isOwner","htmlFor","imageFile","files","saveImage","accept","userId","initialValues","formData","saveProfile","then","MyPostsContainer","ProfileContainer","this","params","authUserId","getProfile","getUserStatus","refreshProfile","prevProps","prevState","Component","compose","userProfileData","isUploadingImg","authData","useParams"],"sourceRoot":""}